{
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "id": {
                "type": "integer",
                "description": "unique id of this item in our database",
                "examples": [
                    164679,
                    165855,
                    164680
                ]
            },
            "formal_name": {
                "type": "string",
                "description": "Lean name of this item",
                "examples": [
                    "rank_range_add_rank_ker",
                    "LinearMap.finrank_range_add_finrank_ker",
                    "rank_eq_of_surjective"
                ]
            },
            "formal_type": {
                "type": "string",
                "description": "Lean type of this item",
                "examples": [
                    "\u2200 {K : Type u} {V V\u2081 : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]   [inst_3 : AddCommGroup V\u2081] [inst_4 : Module K V\u2081] (f : V \u2192\u2097[K] V\u2081),   Module.rank K \u21a5(LinearMap.range f) + Module.rank K \u21a5(LinearMap.ker f) = Module.rank K V",
                    "\u2200 {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {V\u2082 : Type v'}   [inst_3 : AddCommGroup V\u2082] [inst_4 : Module K V\u2082] [inst_5 : FiniteDimensional K V] (f : V \u2192\u2097[K] V\u2082),   finrank K \u21a5(LinearMap.range f) + finrank K \u21a5(LinearMap.ker f) = finrank K V",
                    "\u2200 {K : Type u} {V V\u2081 : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]   [inst_3 : AddCommGroup V\u2081] [inst_4 : Module K V\u2081] (f : V \u2192\u2097[K] V\u2081),   Surjective \u21d1f \u2192 Module.rank K V = Module.rank K V\u2081 + Module.rank K \u21a5(LinearMap.ker f)"
                ]
            },
            "kind": {
                "type": "string",
                "description": "Lean kind(def, theorem, abbrev, ...) of this item",
                "examples": [
                    "theorem",
                    "theorem",
                    "theorem"
                ]
            },
            "file_name": {
                "type": "string",
                "description": "name of the Lean file containing this item",
                "examples": [
                    "Mathlib.LinearAlgebra.Basic",
                    "Mathlib.LinearAlgebra.FiniteSpan",
                    "Mathlib.LinearAlgebra.Basic"
                ]
            },
            "doc_url": {
                "type": "string",
                "description": "url of document of the Lean file containing this item",
                "examples": [
                    "https://leanprover-community.github.io/mathlib4_docs/find/?pattern=rank_range_add_rank_ker#doc",
                    "https://leanprover-community.github.io/mathlib4_docs/find/?pattern=LinearMap.finrank_range_add_finrank_ker#doc",
                    "https://leanprover-community.github.io/mathlib4_docs/find/?pattern=rank_eq_of_surjective#doc"
                ]
            },
            "docstring": {
                "type": "string",
                "description": "docstring of this item",
                "examples": [
                    "The **rank-nullity theorem** ",
                    "rank-nullity theorem : the dimensions of the kernel and the range of a linear map add up to\nthe dimension of the source space. ",
                    ""
                ]
            }
        }
    }
}